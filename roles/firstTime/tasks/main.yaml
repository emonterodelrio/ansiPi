---
- name: Install - Create temp folder
  local_action:
    module: file
    path: ./temp
    mode: 0755
    state: directory

- name: Apt-get update
  become: yes
  shell: apt-get update -y

- name: Install software via apt
  become: yes
  apt:
    name: '{{ local_additional_packages }}'

- name: Lastpass - Check installed
  local_action: command lpass -h
  register: lpassInstalled 

- name: Lastpass - Download
  local_action:
    module: get_url
    url: "{{ lpass.url }}"
    dest: ./temp
    mode: 0777
  when: lpassInstalled.rc != 0

- name: Lastpass - Extract
  local_action: command tar -C ./temp/ -xvf ./temp/lastpass-cli-{{ lpass.version }}.tar.gz
  when: lpassInstalled.rc != 0

- name: Lastpass - Make
  become: yes
  local_action: 
    module: make
    chdir: ./temp/lastpass-cli-{{ lpass.version }}
  when: lpassInstalled.rc != 0

- name: Lastpass - Make install
  become: yes
  local_action: 
    module: make
    target: install
    chdir: ./temp/lastpass-cli-{{ lpass.version }}
  when: lpassInstalled.rc != 0

- name: Lastpass - Ensure user loged in
  local_action: shell lpass ls

- name: Lastpass - Create pi credentials
  local_action: shell lpass generate --no-symbols --username {{ pi.user }} {{ lpass.piId }}/pi 50
  register: pass

- name: Lastpass - Encrypt pi password
  local_action: shell mkpasswd --method=sha-512 {{ pass.stdout }}
  register: pass512

- name: Lastpass - Change pi password
  become: yes
  become_user: root
  user: name=pi password={{ pass512.stdout }} update_password=always

- name: Ansible - Change pi password at /etc/ansible/hosts
  become: yes
  become_user: root
  local_action: shell sed -i 's/\(.*\)ansible_user=\(.*\) ansible_ssh_pass=\(.*\)/\1ansible_user=\2 ansible_ssh_pass={{ pass.stdout }}/g' /etc/ansible/hosts

- name: Ansible - Enable callback_whitelists
  become: yes
  become_user: root
  local_action: shell sed -i 's/#callback_whitelist\(.*\)/callback_whitelist\1/g' /etc/ansible/ansible.cfg

- name: Ansible - Enable timer and profile_tasks callbacks
  become: yes
  become_user: root
  local_action: shell sed -i 's/callback_whitelist\(.*\)/callback_whitelist= profile_tasks, timer/g' /etc/ansible/ansible.cfg

- name: Ansible - Enable pipelining
  become: yes
  become_user: root
  local_action: shell sed -i 's/#pipelining = False/pipelining = True/g' /etc/ansible/ansible.cfg

- name: Install - Delete temp folder
  become: yes
  local_action:
    module: file
    path: ./temp
    state: absent

---
- name: Install software via apt
  become: yes
  apt:
    name: '{{ additional_packages }}'

- name: Update all packages to the latest version
  become: yes
  shell: apt-get update

- name: Load pi password from file
  shell: cat /home/pi/.piPass
  register: piPassReaded

- name: Encrypt pi password
  local_action: shell mkpasswd --method=sha-512 {{ piPassReaded.stdout }}
  register: pass512

- name: Change pi password
  become: yes
  become_user: root
  user: name=pi password={{ pass512.stdout }} update_password=always

- name: Change pi password at conf/inventory/inventory
  become: yes
  become_user: root
  local_action: shell sed -i 's/{{ ansible_default_ipv4.address }} ansible_user=\(.*\) ansible_ssh_pass=\(.*\)/{{ ansible_default_ipv4.address }} ansible_user=\1 ansible_ssh_pass={{ piPassReaded.stdout }}/g' conf/inventory/inventory

- name: Setup alias at bash_profile
  become: yes
  lineinfile:
    path: /etc/bash.bashrc
    line: "{{ item }}"
  with_items:
    - alias ll='ls -larth'

- name: Delete history stuff from pi user
  become: yes
  lineinfile:
    path: /home/pi/.bashrc
    state: absent
    regexp: '^HIST'

- name: Setup history at /etc/bash.bashrc
  become: yes
  lineinfile:
    path: /etc/bash.bashrc
    line: "{{ item }}"
  with_items:
    - HISTCONTROL=ignoreboth:erasedups
    - HISTSIZE=100000
    - HISTFILESIZE=200000

- name: Swappiness to {{ pi.swappiness }} at /etc/sysctl.conf
  become: yes
  lineinfile:
    path: /etc/sysctl.conf
    line: "vm.swappiness = {{ pi.swappiness }}"
    state: present
    regexp: '^vm.swappiness'

- name: Enable bluetooth at /boot/config.txt
  become: yes
  lineinfile:
    path: /boot/config.txt
    line: "dtoverlay=pi3-disable-bt"
    regexp: '^dtoverlay'
    state: present
  when: pi.bluetoothEnabled

- name: Disable bluetooth at /boot/config.txt
  become: yes
  lineinfile:
    path: /boot/config.txt
    regexp: '^dtoverlay'
    state: absent
  when: not pi.bluetoothEnabled

- name: Change hostname
  become: yes
  shell: echo {{ pi.hostname }} > /etc/hostname
  register: changedHostname

- name: Change etc hosts
  become: yes
  shell: sed -i "s/raspberrypi/{{ pi.hostname }}/g" /etc/hosts

- name: Setup fixed ip
  become: yes
  blockinfile:
    path: /etc/dhcpcd.conf
    block: |
      interface eth0

      static ip_address={{ pi.network.ip }}/{{ pi.network.maskLength }}
      static routers={{ pi.network.prefix }}.1
      static domain_name_servers={{ pi.network.dns1 }} {{ pi.network.dns2 }}

      interface wlan0

      static ip_address={{ pi.network.ip }}/{{ pi.network.maskLength }}
      static routers={{ pi.network.prefix }}.1
      static domain_name_servers={{ pi.network.dns1 }} {{ pi.network.dns2 }}
  register: changeIp

- name: Setup dns
  become: yes
  blockinfile:
    path: /etc/resolv.conf
    block: |
      nameserver {{ pi.network.dns1 }}
      nameserver {{ pi.network.dns2 }}

- name: Change pi ip at conf/inventory
  become: yes
  become_user: root
  local_action: command sed -i 's/{{ ansible_default_ipv4.address }} ansible_user/{{ pi.network.ip }} ansible_user=/g' conf/inventory/inventory

- name: Delete previous known_hosts user
  local_action: command ssh-keygen -f "/home/emontero/.ssh/known_hosts" -R {{ pi.network.ip }}
  ignore_errors: yes

- name: Delete previous known_hosts root
  become: yes
  become_user: root
  local_action: command ssh-keygen -f "/home/emontero/.ssh/known_hosts" -R {{ pi.network.ip }}
  ignore_errors: yes

- name: Avoid curl errors
  become: yes
  become_user: root
  command: sed -i '/CipherString = DEFAULT@SECLEVEL=2/d' /etc/ssl/openssl.cnf

- name: Reboots every night
  become: yes
  become_user: root
  cron:
    name: "Reboot system"
    minute: "58"
    hour: "23"
    job: "reboot -h now"

- name: Delete unused stuff
  file:
   path: "{{item}}"
   state: absent
  with_items: "{{ toCleanDirectories }}"

- name: Reboot host and wait for it to restart
  become: yes
  reboot:
    msg: "Reboot initiated by Ansible"
    connect_timeout: 5
    reboot_timeout: 0
    post_reboot_delay: 10
    test_command: uptime
  when: changedHostname.changed
